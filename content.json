{"meta":{"title":"小手一撑 与世无争","subtitle":"运维","description":"运维记录","author":"赵明","url":"https://mingzark.github.io","root":"/"},"pages":[{"title":"目录","date":"2020-12-01T09:02:48.000Z","updated":"2020-12-01T09:07:16.781Z","comments":true,"path":"categories/index.html","permalink":"https://mingzark.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-12-01T09:02:20.000Z","updated":"2020-12-01T09:07:44.203Z","comments":true,"path":"tags/index.html","permalink":"https://mingzark.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"openvpn搭建","slug":"openvpn搭建","date":"2020-12-01T08:11:01.000Z","updated":"2020-12-01T09:40:14.790Z","comments":true,"path":"2020/12/01/openvpn搭建/","link":"","permalink":"https://mingzark.github.io/2020/12/01/openvpn%E6%90%AD%E5%BB%BA/","excerpt":"说明 此法用于客户端通过OpenVPN服务器访问服务器所在私网网段","text":"说明 此法用于客户端通过OpenVPN服务器访问服务器所在私网网段 OpenVPN服务器操作系统centos7.8 OpenVPN版本2.4.9 easy-rsa版本3.0.8 使用tun模式 客户端IP地址池10.8.0.0/24 多个客户端直接可以通过OpenVPN实现通信 准备操作添加EPEL源1yum install epel-release -y 替换为阿里云的源12345sed -e &#39;s,^#baseurl,baseurl,g&#39; \\ -e &#39;s,^metalink,#metalink,g&#39; \\ -e &#39;s,^mirrorlist&#x3D;,#mirrorlist&#x3D;,g&#39; \\ -e &#39;s,http:&#x2F;&#x2F;download.fedoraproject.org&#x2F;pub,https:&#x2F;&#x2F;mirrors.aliyun.com,g&#39; \\ -i &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo 更新软件12yum makecacheyum update -y 修改sysctl参数12echo &quot;net.ipv4.ip_forward &#x3D; 1&quot; &gt;&gt;&#x2F;etc&#x2F;sysctl.confsysctl -p 安装OpenVPN软件1yum install -y openvpn easy-rsa lrzsz iptables-services 配置服务器证书复制文件 拷贝easy-rsa的文件到/etc/openvpn下 12cp -r &#x2F;usr&#x2F;share&#x2F;easy-rsa&#x2F;3.0.8 &#x2F;etc&#x2F;openvpn&#x2F;easy-rsacp &#x2F;usr&#x2F;share&#x2F;doc&#x2F;easy-rsa-3.0.8&#x2F;vars.example &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars 修改vars 编辑vars文件 1vim &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars 修改以下几项 123456789101112#set_var EASYRSA_REQ_COUNTRY &quot;US&quot;#set_var EASYRSA_REQ_PROVINCE &quot;California&quot;#set_var EASYRSA_REQ_CITY &quot;San Francisco&quot;#set_var EASYRSA_REQ_ORG &quot;Copyleft Certificate Co&quot;#set_var EASYRSA_REQ_EMAIL &quot;me@example.net&quot;#set_var EASYRSA_REQ_OU &quot;My Organizational Unit&quot;#set_var EASYRSA_KEY_SIZE 4096#set_var EASYRSA_ALGO rsa#set_var EASYRSA_CA_EXPIRE 3650#set_var EASYRSA_CERT_EXPIRE 3650#set_var EASYRSA_CERT_RENEW 180#set_var EASYRSA_CRL_DAYS 60 初始化PKI和CA切换目录1cd &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa 创建PKI1.&#x2F;easyrsa init-pki 创建CA1.&#x2F;easyrsa build-ca nopass 创建服务器证书1.&#x2F;easyrsa build-server-full openvpn-server nopass 创建DH证书1.&#x2F;easyrsa gen-dh 拷贝证书12345678mkdir -p &#x2F;etc&#x2F;openvpn&#x2F;pkicp &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;ca.crt \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;dh.pem \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;issued&#x2F;openvpn-server.crt \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;private&#x2F;openvpn-server.key \\ &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ln -sv &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;crl.pem &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;crl.pemchown -R root:openvpn &#x2F;etc&#x2F;openvpn&#x2F;pki 创建ta.key1openvpn --genkey --secret &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key 配置OpenVPN创建日志目录12mkdir -p &#x2F;var&#x2F;log&#x2F;openvpnchown -R openvpn:openvpn &#x2F;var&#x2F;log&#x2F;openvpn 创建客户端配置目录12mkdir -p &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;&#123;config,user&#125;chown -R root:openvpn &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;&#123;config,user&#125; 配置OpenVPN服务器端1vim &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;srv.conf 下面内容按需更改 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# 监听地址local 0.0.0.0# 监听端口port 51194# 通信协议proto tcp# TUN模式还是TAP模式dev tun# 证书ca &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ca.crtcert &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;openvpn-server.crtkey &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;openvpn-server.keydh &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;dh.pemcrl-verify &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;crl.pem# 禁用OpenVPN自定义缓冲区大小，由操作系统控制sndbuf 0rcvbuf 0# TLS rules “client” | “server”remote-cert-tls &quot;client&quot;# TLS认证tls-auth &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key# TLS最小版本#tls-version-min &quot;1.2&quot;# 重新协商数据交换的key，默认3600#reneg-sec 3600# 在此文件中维护客户端与虚拟IP地址之间的关联记录# 如果OpenVPN重启，重新连接的客户端可以被分配到先前分配的虚拟IP地址ifconfig-pool-persist &#x2F;etc&#x2F;openvpn&#x2F;ipp.txt# 配置client配置文件client-config-dir &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config# 该网段为 open VPN 虚拟网卡网段，不要和内网网段冲突即可。server 10.8.0.0 255.255.255.0# 给客户端推送自定义路由#push &quot;route 192.168.0.0 255.255.255.0&quot;# 所有客户端的默认网关都将重定向到VPN#push &quot;redirect-gateway def1 bypass-dhcp&quot; # 向客户端推送DNS配置#push &quot;dhcp-option DNS 223.5.5.5&quot;#push &quot;dhcp-option DNS 223.6.6.6&quot;# 允许客户端之间互相访问client-to-client# 限制最大客户端数量#max-clients 10# 客户端连接时运行脚本#client-connect ovpns.script# 客户端断开连接时运行脚本#client-disconnect ovpns.script# 保持连接时间keepalive 20 120# 开启vpn压缩comp-lzo# 允许多人使用同一个证书连接VPN，不建议使用，注释状态#duplicate-cn# 运行用户user openvpn#运行组group openvpn# 持久化选项可以尽量避免访问那些在重启之后由于用户权限降低而无法访问的某些资源persist-keypersist-tun# 显示当前的连接状态status &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn-status.log# 日志路径，不指定文件路径时输出到控制台# log代表每次启动时清空日志文件#log &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn.log# log-append代表追加写入到日志文件#log-append &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn.log# 日志级别verb 4# 忽略过多的重复信息，相同类别的信息只有前20条会输出到日志文件中mute 20 启动OpenVPN-server123chown -R root:openvpn &#x2F;etc&#x2F;openvpnsystemctl enable openvpn-server@srv.servicesystemctl start openvpn-server@srv.service 开启iptables策略1iptables -t nat -A POSTROUTING -s 10.8.0.0&#x2F;24 -j MASQUERADE 定期更新CRL说明 OpenVPN的server配置里面添加了crl-verify之后，需要给crl定期更新 如果crl文件长期不更新，过期之后，OpenVPN会报无法验证证书，导致无法连接OpenVPN 配置systemd timer定义Service12345678910vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;easyrsa-gen-crl.service[Unit]Description&#x3D;easyrsa-gen-crl[Service]Type&#x3D;oneshot# 重新生成CRL文件ExecStart&#x3D;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;easyrsa gen-crl# 命令完成之后重启OpenVPN服务ExecStartPost&#x3D;&#x2F;usr&#x2F;bin&#x2F;systemctl restart openvpn-server@srv.serviceWorkingDirectory&#x3D;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa 定义timer1234567891011vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;easyrsa-gen-crl.timer[Unit]Description&#x3D;easyrsa-gen-crl[Timer]# 每周一凌晨4点触发easyrsa-gen-crl.serviceOnCalendar&#x3D;Mon *-*-* 04:00:00Persistent&#x3D;true[Install]WantedBy&#x3D;timers.target 启动timer12systemctl enable easyrsa-gen-crl.timersystemctl start easyrsa-gen-crl.timer 立刻启动service1systemctl start easy-rsa-gen-crl.service 查看Service日志1journalctl -xfu easy-rsa-gen-crl.service 查看timer状态1systemctl status easyrsa-gen-crl.timer 客户端管理客户端配置模板123456789101112131415161718192021222324252627282930313233vim &#x2F;etc&#x2F;openvpn&#x2F;templates&#x2F;ovpn.template# 配置为客户端模式client# 与服务器端保持一致proto tcp# 与服务器端保持一致dev tun# 配置服务器端的地址和端口remote 服务端ip 51194resolv-retry infinitenobindpersist-keypersist-tuncomp-lzonice 0verb 3mute 10# 禁用OpenVPN自定义缓冲区大小，由操作系统控制sndbuf 0rcvbuf 0# 禁止在内存中缓存passwordauth-nocache# TLS rules “client” | “server”remote-cert-tls server# 过滤从服务器端发过来的路由规则#pull-filter ignore redirect-gateway# 不从服务器端拉取路由规则#route-nopull# 手动指定所有流量走VPN#redirect-gateway def1# 客户端自定义路由，例如192.168.0.0&#x2F;24走VPN，192.168.1.0&#x2F;24不走VPN#route 192.168.0.0 255.255.255.0 vpn_gateway#route 192.168.1.0 255.255.255.0 net_gateway 指定客户端推送配置模板12345vim &#x2F;etc&#x2F;openvpn&#x2F;templates&#x2F;ipconfig_push.template# 给客户端推送固定的IP地址ifconfig-push #ipaddress# 255.255.255.0# 给客户端推送路由#iroute 172.17.0.0 255.255.0.0 客户端配置123vim &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config&#x2F;user1# 给客户端推送固定的IP地址10.8.0.100ifconfig-push 10.8.0.100 255.255.255.0 用户管理脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142vim &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.shchmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh#!&#x2F;bin&#x2F;bashset -e# 定义环境变量export EASY_RSA_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&quot;export CLIENT_CONFIG_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config&quot;export PKI_DIR&#x3D;&quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&quot;export TEMPLATES_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;templates&quot;export CLIENT_USER_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;user&quot;# 创建ovpn配置generate_ovpn() &#123; USER_OVPN&#x3D;&quot;$&#123;CLIENT_USER_DIR&#125;&#x2F;$&#123;EXPIRED&#125;-$&#123;USER&#125;.ovpn&quot; # 根据证书生成对应的ovpn文件 mkdir -p $&#123;CLIENT_USER_DIR&#125;&#x2F; cp -f $&#123;TEMPLATES_DIR&#125;&#x2F;ovpn.template $&#123;USER_OVPN&#125; echo &quot;&lt;ca&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;ca.crt &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;ca&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;cert&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;issued&#x2F;$&#123;USER&#125;.crt &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;cert&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;key&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;private&#x2F;$&#123;USER&#125;.key &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;key&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;tls-auth&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;tls-auth&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; sz --binary $&#123;USER_OVPN&#125;&#125;# 添加客户端IPclient_ip_config() &#123; # 根据ip地址生成对应的client-config sed -e &quot;s,#ipaddress#,$&#123;IPADDRESS&#125;,g&quot; \\ $&#123;TEMPLATES_DIR&#125;&#x2F;ipconfig_push.template \\ &gt; $&#123;CLIENT_CONFIG_DIR&#125;&#x2F;$&#123;USER&#125;&#125;# 生成客户端证书add_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa build-client-full $&#123;USER&#125; nopass&#125;# 注销客户端证书revoke_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; echo &quot;yes&quot; | $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa revoke $&#123;USER&#125; $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa gen-crl&#125;# 更新客户端证书renew_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; echo &quot;yes&quot; | $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa renew $&#123;USER&#125; nopass&#125;# 检查证书过期时间check_cert_expired() &#123; export EXPIRED&#x3D;$(date --date&#x3D;&quot;$(openssl x509 -enddate -noout -in $&#123;PKI_DIR&#125;&#x2F;issued&#x2F;$&#123;USER&#125;.crt |cut -d&#x3D; -f 2)&quot; --iso-8601)&#125;# 创建用户add_user() &#123; if [[ -e &quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&#x2F;reqs&#x2F;$&#123;USER&#125;.req&quot; ]];then read -p&quot;此用户已经申请证书，是否重新生成？[y&#x2F;n]：&quot; ANSWER case $&#123;ANSWER&#125; in y|Y) revoke_cert check_cert_expired client_ip_config add_cert generate_ovpn exit 0 ;; n|N) check_cert_expired client_ip_config generate_ovpn ;; esac else add_cert check_cert_expired client_ip_config generate_ovpn fi&#125;# 删除用户del_user() &#123; revoke_cert rm -rf $&#123;CLIENT_USER_DIR&#125;&#x2F;*$&#123;USER&#125;.ovpn rm -rf $&#123;CLIENT_CONFIG_DIR&#125;&#x2F;$&#123;USER&#125;&#125;# 用户旧证过期重新生成证书renew_user() &#123; if [[ -e &quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&#x2F;reqs&#x2F;$&#123;USER&#125;.req&quot; ]];then renew_cert check_cert_expired generate_ovpn else echo &quot;用户证书不存在！&quot; exit 1 fi&#125;main() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; # 根据传入的method运行对应函数 $&#123;METHOD&#125;&#125;# 获取参数while getopts &#39;m:u:i:r&#39; OPT;do case $OPT in u) USER&#x3D;&quot;$OPTARG&quot; echo &quot;USER&#x3D;$&#123;USER&#125;&quot; ;; i) IPADDRESS&#x3D;&quot;$OPTARG&quot; echo &quot;IPADDRESS&#x3D;$&#123;IPADDRESS&#125;&quot; ;; m) METHOD&#x3D;&quot;$OPTARG&quot; echo &quot;METHOD&#x3D;$&#123;METHOD&#125;&quot; ;; ?) echo &quot;Usage: $(base \\&quot;$0\\&quot;) -m [add_user|del_user|renew_user] -u USER -i IPADDRESS&quot; exit 0 ;; esacdonemain 添加用户1&#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh -m add_user -u USERNAME -i 10.8.0.10 删除用户1&#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh -m del_user -u USERNAME","categories":[],"tags":[{"name":"vpn","slug":"vpn","permalink":"https://mingzark.github.io/tags/vpn/"}]}],"categories":[],"tags":[{"name":"vpn","slug":"vpn","permalink":"https://mingzark.github.io/tags/vpn/"}]}