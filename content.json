{"meta":{"title":"鱼丸粗面","subtitle":"linux运维","description":"","author":"赵明","url":"https://mingzark.github.io","root":"/"},"pages":[{"title":"目录","date":"2020-12-01T09:02:48.000Z","updated":"2020-12-01T10:50:16.731Z","comments":true,"path":"categories/index.html","permalink":"https://mingzark.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-12-01T09:02:20.000Z","updated":"2020-12-01T09:07:44.203Z","comments":true,"path":"tags/index.html","permalink":"https://mingzark.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"b站up视频数据抓取","slug":"b站up视频数据爬取","date":"2021-11-10T08:05:39.000Z","updated":"2022-09-23T01:05:15.000Z","comments":true,"path":"2021/11/10/b站up视频数据爬取/","link":"","permalink":"https://mingzark.github.io/2021/11/10/b%E7%AB%99up%E8%A7%86%E9%A2%91%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/","excerpt":"功能通过upid获取所有视频封面、bv号、作者名，通过bv号抓取标题、播放、以及三连数据，存入excel。","text":"功能通过upid获取所有视频封面、bv号、作者名，通过bv号抓取标题、播放、以及三连数据，存入excel。 依赖123456import requestsimport jsonimport osfrom bs4 import BeautifulSoupfrom openpyxl import Workbookimport re 文件下载12345678def dl(f_name, url): &#39;&#39;&#39; 根据url下载文件并保存 &#39;&#39;&#39; rep &#x3D; requests.get(url,timeout&#x3D;3) if rep.status_code &#x3D;&#x3D; 200: with open(f_name, &#39;wb&#39;) as f: f.write(rep.content) 数据转换12345678910111213def get_realnum(str_num): &#39;&#39;&#39; 将40.2万播放类型的字符串转换为数字类型（low low low）。 &#39;&#39;&#39; num &#x3D; list(filter(lambda x: x in &#39;0123456789.&#39;, str_num)) if num: if &#39;万&#39; in str_num: num &#x3D; float(&#39;&#39;.join(num)) * 10000 else: num &#x3D; float(&#39;&#39;.join(num)) else: num &#x3D; 0 return int(num) 数据存储1234567891011def print_bv_lists_excel(bv_author,bv_lists): &#39;&#39;&#39; 将视频播放数据按up名字存入excel。 &#39;&#39;&#39; wb &#x3D; Workbook() wb.create_sheet(index&#x3D;0,title&#x3D;&#39;播放数据&#39;) sheet&#x3D;wb[&#39;播放数据&#39;] sheet.append([&#39;标题&#39;,&#39;播放&#39;,&#39;收藏&#39;,&#39;投币&#39;,&#39;点赞&#39;,&#39;BV号&#39;]) for data in bv_lists: sheet.append(data) wb.save(bv_author+&#39;.xlsx&#39;) 封面下载1234567891011def dl_img(allvideo): &#39;&#39;&#39; 下载up所有视频封面，按bv号存入以up名字命名的文件夹中。 &#39;&#39;&#39; for each in allvideo: print(each[&#39;pic&#39;]) r_author&#x3D;each[&#39;author&#39;] r_name &#x3D; r_author + &#39;&#x2F;&#39; + each[&#39;bvid&#39;] + &#39;.jpg&#39; if not os.path.exists(r_author): os.mkdir(r_author) dl(r_name,each[&#39;pic&#39;]) 使用bs4解析bv数据12345678910111213141516def get_bv_play_list(bvid): &#39;&#39;&#39; 获取当前bv号的标题、播放、以及三连数据。 &#39;&#39;&#39; url&#x3D;&#39;https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;&#39; + bvid bv_play_list &#x3D; [] response&#x3D;requests.get(url,timeout&#x3D;3) html&#x3D;response.text soup &#x3D; BeautifulSoup(html, &#39;lxml&#39;) h5_title &#x3D; soup.select(&#39;span[class^&#x3D;&quot;tit&quot;]&#39;)[0].get_text().strip() h5_like &#x3D; get_realnum(soup.select(&#39;span[class&#x3D;&quot;like&quot;]&#39;)[0].get_text().strip()) h5_coin &#x3D; get_realnum(soup.select(&#39;span[class&#x3D;&quot;coin&quot;]&#39;)[0].get_text().strip()) h5_collect &#x3D; get_realnum(soup.select(&#39;span[class&#x3D;&quot;collect&quot;]&#39;)[0].get_text().strip()) h5_view &#x3D; get_realnum(soup.select(&#39;span[class&#x3D;&quot;view&quot;]&#39;)[0].get_text().strip()) bv_play_list.append((bvid,h5_title,h5_view,h5_collect,h5_coin,h5_like)) return bv_play_list 抓取up视频数据12345678910111213141516def get_vlist(upid&#x3D;&#39;2789978&#39;): &#39;&#39;&#39; 获取当前upid的视频封面、bv号、作者，返回列表。 &#39;&#39;&#39; url&#x3D;&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;space&#x2F;arc&#x2F;search?mid&#x3D;&#39;+upid response&#x3D;requests.get(url,timeout&#x3D;3) data&#x3D;json.loads(response.text) allvideo&#x3D;[] if data[&#39;code&#39;] &#x3D;&#x3D; 0: r_pn&#x3D;int(int(data[&#39;data&#39;][&#39;page&#39;][&#39;count&#39;])&#x2F;50)+2 for pn in range(1,r_pn): url&#x3D;&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;space&#x2F;arc&#x2F;search?ps&#x3D;50&amp;pn&#x3D;&#39; + str(pn) + &#39;&amp;mid&#x3D;&#39;+ upid response &#x3D; requests.get(url,timeout&#x3D;3) data &#x3D; json.loads(response.text) allvideo.extend(data[&#39;data&#39;][&#39;list&#39;][&#39;vlist&#39;]) return allvideo 表情包下载123456789101112131415161718def get_emote(): &#39;&#39;&#39; 下载表情包 &#39;&#39;&#39; url&#x3D;&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;emote&#x2F;user&#x2F;panel&#x2F;web?business&#x3D;reply&#39; response&#x3D;requests.get(url,timeout&#x3D;3) data&#x3D;json.loads(response.text) lists&#x3D;data[&#39;data&#39;][&#39;packages&#39;] emote_dir&#x3D;&#39;emote&#39; if not os.path.exists(emote_dir): os.mkdir(emote_dir) for i in lists: for emote in i[&#39;emote&#39;]: pattern&#x3D;r&#39;^http&#39; match&#x3D;re.match(pattern,emote[&#39;url&#39;]) if match !&#x3D; None: name &#x3D; emote_dir + &#39;&#x2F;&#39; + emote[&#39;text&#39;] + &#39;.jpg&#39; dl(name,emote[&#39;url&#39;]) main123456789101112131415if __name__ &#x3D;&#x3D; &#39;__main__&#39;: upid &#x3D; input(&#39;请输入B站up主id：&#39;) allvideo&#x3D;get_vlist(upid) a&#x3D;get_bv_play_list(&#39;BV1v3411z7k5&#39;) print(a) dl_img(allvideo) bv_play_lists&#x3D;[] for each in allvideo: #获取每个视频播放数据 print(each[&#39;bvid&#39;]) bv_play_list&#x3D;get_bv_play_list(each[&#39;bvid&#39;]) bv_play_lists.extend(bv_play_list) bv_play_lists.sort(key&#x3D;lambda x:(x[2],x[3],x[4],x[5]),reverse&#x3D;True) #根据播放量、收藏、投币、点赞排序 bv_author &#x3D; allvideo[0][&#39;author&#39;] # 获取视频作者 print_bv_lists_excel(bv_author,bv_play_lists) emote&#x3D;get_emote() #下载通用表情包 数据如下 标题 播放 收藏 投币 点赞 BV号 中华田园犬，爱吃香蕉却不会抢主人手上的，一定要放到地上才肯吃 1062000 5362 9621 45000 BV1v4411y7o2 中华田园犬，下雨天坐在门口等主人回家，雨越来越大它也不愿进家 961000 5181 5216 39000 BV1RJ411j72Q 田园犬小奶狗，一个多月就懂得看家护院，看见陌生人大胆冲上来吠 796000 3240 2939 24000 BV14J411n7MQ 连续3天冲我翻白眼狂吠的小奶狗，今天终于被我收拾了，真香！ 789000 4604 7255 40000 BV1aK4y1b7HH 超凶小奶狗翻脸真快，昨天吃我罐头今天又吠我，最后被我妥妥收拾 528000 1333 2953 23000 BV14k4y1r7dJ 田园犬独生子，生平第一次吃狗粮，看看什么反应 507000 735 693 6491 BV1t4411v7sS","categories":[{"name":"python","slug":"python","permalink":"https://mingzark.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://mingzark.github.io/tags/python/"}]},{"title":"wordpress配置cdn支持https","slug":"wordpress配置cdn支持https","date":"2021-11-05T08:05:39.000Z","updated":"2021-11-05T08:22:27.000Z","comments":true,"path":"2021/11/05/wordpress配置cdn支持https/","link":"","permalink":"https://mingzark.github.io/2021/11/05/wordpress%E9%85%8D%E7%BD%AEcdn%E6%94%AF%E6%8C%81https/","excerpt":"问题 wordpress默认通过http访问，修改配置使支持https。","text":"问题 wordpress默认通过http访问，修改配置使支持https。 解决方法1、进入WP后台，进入设置-常规 将WordPress地址（URL）、站点地址（URL）两项修改为：https。 或者更改数据库wp_option第1，2行http协议。 2、修改网站根目录下wp-config.php 在\\* @package WordPress后面添加（不可在最后添加）： `/* 强制后台和登录使用 SSL */ $_SERVER[‘HTTPS’] = ‘on’; define(‘FORCE_SSL_LOGIN’, true); define(‘FORCE_SSL_ADMIN’, true); 3、修改/wp-includes/load.php中的function is_ssl()，将文件里$_SERVER[‘HTTPS’]全部修改为$_SERVER[“HTTP_FROM_HTTPS”]，将最后一行的return false 更改为return true 4、更改之前添加的多媒体文件地址，博客地址换为自己的域名 update wp_posts set post_content = replace(post_content, &#39;http://博客地址&#39;,&#39;https://博客地址&#39;) 5、cdn配置https证书，开启https强制跳转。","categories":[{"name":"wordpress","slug":"wordpress","permalink":"https://mingzark.github.io/categories/wordpress/"}],"tags":[{"name":"wordpress","slug":"wordpress","permalink":"https://mingzark.github.io/tags/wordpress/"}]},{"title":"请求header过大springboot报400错误","slug":"请求header过大springboot报400错误","date":"2021-10-13T02:05:39.000Z","updated":"2021-10-13T02:33:11.000Z","comments":true,"path":"2021/10/13/请求header过大springboot报400错误/","link":"","permalink":"https://mingzark.github.io/2021/10/13/%E8%AF%B7%E6%B1%82header%E8%BF%87%E5%A4%A7springboot%E6%8A%A5400%E9%94%99%E8%AF%AF/","excerpt":"问题 项目上线后所有后台接口报错400，接口直接访问正常，测试环境访问正常，经排查是由于正式环境请求cookie过大导致。","text":"问题 项目上线后所有后台接口报错400，接口直接访问正常，测试环境访问正常，经排查是由于正式环境请求cookie过大导致。 解决方法1、nginx加大header缓存大小，未生效。 前端http { 12client_header_buffer_size 64k; 默认值1k large_client_header_buffers 4 64k; 默认值4 8k } 2、后端springboot 配置后，问题解决，默认8KB 12server: max-http-header-size: 64KB 注：header限制需要所有经过的项目都放开限制","categories":[{"name":"springboot","slug":"springboot","permalink":"https://mingzark.github.io/categories/springboot/"}],"tags":[{"name":"springnoot","slug":"springnoot","permalink":"https://mingzark.github.io/tags/springnoot/"}]},{"title":"nginx替换响应内容","slug":"nginx替换响应内容","date":"2021-09-09T02:05:39.000Z","updated":"2021-09-09T03:03:28.365Z","comments":true,"path":"2021/09/09/nginx替换响应内容/","link":"","permalink":"https://mingzark.github.io/2021/09/09/nginx%E6%9B%BF%E6%8D%A2%E5%93%8D%E5%BA%94%E5%86%85%E5%AE%B9/","excerpt":"问题 ckeditor公式插件使用限制，通过nginx方向代理替换域名后部分请求接口在响应内容里，因XmlHttpRequest同源策略被拦截，因此还需要替换响应内容。","text":"问题 ckeditor公式插件使用限制，通过nginx方向代理替换域名后部分请求接口在响应内容里，因XmlHttpRequest同源策略被拦截，因此还需要替换响应内容。 解决方法简单替换模块 ngx_http_sub_module： 介绍： ngx_http_sub_module模块是一个过滤器，它修改网站响应内容中的字符串。这个模块已经内置在nginx中，但是默认未安装，需要安装需要加上配置参数：–with-http_sub_module 如果已经安装nginx,只需要再添加这个模块就可以了。 常用指令： 2.1 sub_filter指令： sub_filter string（原字符串） replacement（用于替换的字符串）; 用于设置需要使用说明字符串替换说明字符串.string是要被替换的字符串，replacement是 新的字符串，它里面可以带变量。 2.2 sub_filter_last_modified指令： sub_filter_last_modified on | off; 用于设置网页内替换后是否修改 可在nginx.conf的 http, server, location三个位置配置使 用，默认值是off； 2.3 sub_filter_once指令：sub_filter_once on | off; 用于设置字符串替换次数，默认只替换一次。如果是on，默认只替换第一次匹配到的到字 符，如果是off，那么所有匹配到的字符都会被替换； 2.4 sub_filter_types指令：sub_filter_types * ​ 用于指定需要被替换的MIME类型,默认为“text/html”，如果制定为*，那么所有的； 说明： 3.1以上指令可在nginx.conf的http, server, location三个位置配置使用； 3.2此模块替换不区分大小写； 3.3支持中文替换； 示例： 1234567891011121314location &#x3D; &#x2F;demo&#x2F;editor&#x2F;editor &#123; alias &#x2F;html&#x2F;js&#x2F;editor;&#125;location &#x3D; &#x2F;demo&#x2F;plugins&#x2F;app&#x2F;configurationjs &#123; sub_filter_types * ; #add_header Access-Control-Allow-Origin *;跨域配置视情况加，不然会出现请求头重复 proxy_set_header Referer &quot;www.wiris.net&quot;; proxy_pass https:&#x2F;&#x2F;www.wiris.net; sub_filter &#39;www.wiris.net&#39; &#39;wiris.aaa.com&#39;;&#125;location ^~ &#x2F;demo&#x2F; &#123; proxy_set_header Referer &quot;www.wiris.net&quot;; proxy_pass https:&#x2F;&#x2F;www.wiris.net;&#125; 注：实际在替换某些类型时没替换成功，需要下载到本地 nginx配置返回json1234location ~ ^&#x2F;get_json &#123; default_type application&#x2F;json; return 200 &#39;&#123;&quot;status&quot;:&quot;success&quot;,&quot;result&quot;:&quot;nginx json&quot;&#125;&#39;;&#125;","categories":[{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/tags/nginx/"}]},{"title":"nginx配置vue history模式","slug":"nginx配置vue_history模式","date":"2021-07-26T02:27:41.000Z","updated":"2021-07-26T06:04:00.014Z","comments":true,"path":"2021/07/26/nginx配置vue_history模式/","link":"","permalink":"https://mingzark.github.io/2021/07/26/nginx%E9%85%8D%E7%BD%AEvue_history%E6%A8%A1%E5%BC%8F/","excerpt":"问题 nginx配置vue history后，页面加载空白","text":"问题 nginx配置vue history后，页面加载空白 解决方法1、一般情况使用配置一即可； 2、如果VUE应用没有发布在域名的目录根下，比如http://xxx.com/wx/，需要使用配置二； 12345678910111213配置一： location &#x2F; &#123; try_files $uri $uri&#x2F; &#x2F;index.html; &#125;配置二： location &#x2F;wx &#123; root &#x2F;data&#x2F;nginx&#x2F;html; index index.html index.htm; if (!-e $request_filename) &#123; rewrite ^&#x2F;(.*) &#x2F;wx&#x2F;index.html last; break; &#125; &#125; 注：vue配置，base路径同域名访问路径 12base: &#39;&#x2F;wx&#39;,mode: &#39;history&#39;,","categories":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"},{"name":"nginx","slug":"centos/nginx","permalink":"https://mingzark.github.io/categories/centos/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/tags/nginx/"}]},{"title":"pod访问同一集群下的nginx-controller的SLB不通","slug":"pod访问同一集群下的nginx-controller的SLB不通","date":"2021-07-12T03:31:18.754Z","updated":"2021-07-12T03:30:31.000Z","comments":true,"path":"2021/07/12/pod访问同一集群下的nginx-controller的SLB不通/","link":"","permalink":"https://mingzark.github.io/2021/07/12/pod%E8%AE%BF%E9%97%AE%E5%90%8C%E4%B8%80%E9%9B%86%E7%BE%A4%E4%B8%8B%E7%9A%84nginx-controller%E7%9A%84SLB%E4%B8%8D%E9%80%9A/","excerpt":"问题简介 ​ 在Kubernetes集群中有部分服务无法访问集群暴露出去的SLB。","text":"问题简介 ​ 在Kubernetes集群中有部分服务无法访问集群暴露出去的SLB。 解决方案 ​ SLB设置了externalTrafficPolicy: Local类型，这种类型的SLB地址只有在Node中部署了对应的后端Pod，才能被访问。因为SLB的地址是集群外使用，如果集群节点和Pod不能直接访问，请求不会到SLB，会被当作Service的扩展IP地址，被kube-proxy的iptables或ipvs转发。如果刚好集群节点或者Pod所在的节点上没有相应的后端服务Pod，就会发生网络不通的问题，而如果有相应的后端服务Pod，是可以正常访问。 ​ 将LoadBalancer的Service中的externalTrafficPolicy修改为Cluster，但是在应用中会丢失源IP。 ​ 参考https://help.aliyun.com/knowledge_detail/171437.html?spm=5176.smartservice_service_chat.0.0.7f95709asvYshC","categories":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"},{"name":"nginx","slug":"centos/nginx","permalink":"https://mingzark.github.io/categories/centos/nginx/"}],"tags":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/tags/k8s/"},{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/tags/nginx/"}]},{"title":"spring项目从启动到提供访问经过了哪些服务","slug":"spring项目从启动到提供访问经过了哪些服务","date":"2021-06-03T07:27:41.000Z","updated":"2021-06-03T07:47:19.566Z","comments":true,"path":"2021/06/03/spring项目从启动到提供访问经过了哪些服务/","link":"","permalink":"https://mingzark.github.io/2021/06/03/spring%E9%A1%B9%E7%9B%AE%E4%BB%8E%E5%90%AF%E5%8A%A8%E5%88%B0%E6%8F%90%E4%BE%9B%E8%AE%BF%E9%97%AE%E7%BB%8F%E8%BF%87%E4%BA%86%E5%93%AA%E4%BA%9B%E6%9C%8D%E5%8A%A1/","excerpt":"dns当一个用户在地址栏输入一个域名时，DNS解析过程如下：","text":"dns当一个用户在地址栏输入一个域名时，DNS解析过程如下： 浏览器先检查自身缓存中有没有被解析过的这个域名对应的ip地址，如果有，解析结束。 如果浏览器缓存没有命中，检查操作系统中本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。 如果还没有命中域名，才会真正的请求本地域名服务器（LDNS）来解析这个域名，这台服务器会缓存域名解析结果，大约80%的域名解析到这里就完成了。 如果LDNS仍然没有命中，就直接跳到Root Server 域名服务器迭代查询解析，直到获取到zjyjc.com的dns服务器地址。 当本地DNS服务器收到这个地址后，就会找zjyjc.com域服务器，进行递归查询，直至找到www.zjyjc.com主机。 cdn由分布在不同区域的边缘节点服务器群组成的分布式网络。 阿里云DNS调度系统为用户分配cname的最佳节点IP地址： 如果该IP地址对应的节点已缓存该资源，则会将数据直接返回给用户。 如果该IP地址对应的节点未缓存该资源，则节点向源站发起对该资源的请求。获取资源后，结合用户自定义配置的缓存策略，将资源缓存至节点。 waf(web应用防火墙)通过cname方式接入 ​ WAF可以有效识别Web业务流量的恶意特征，在对流量进行清洗和过滤后，将正常、安全的流量返回给服务器，避免网站服务器被恶意入侵导致服务器性能异常等问题，保障网站的业务安全和数据安全。 slb(负载均衡)​ slb通过监听容器组的80,443端口，提供容器外部可访问的url。 service​ service类型主要有ClusterIP、NodePort、LoadBalancer3种。 ​ service以标签的形式选定一组带有指定标签的 Pod，并监控和自动负载他们的 Pod IP，我们只需要通过 Service IP 访问就行了。 ​ Pod是Kubernetes创建或部署的最小/最简单的基本单位，一个Pod代表集群上正在运行的一个进程。一个Pod封装一个应用容器（也可以有多个容器）。 nginx server { listen 80 default_server; server_name www.zjyjc.com; location ^~ /api/admin { proxy_pass http://admin-api; } location ^~ /api/ { proxy_pass http://gateway; } } upstream gateway { } upstream admin-api { } gatewaygateway服务中application.yml定义路由策略 server: port: 19340 spring: cloud: gateway: routes: - id: eauth order: 10 uri: lb://sso-api predicates: - Path=/api/auth/** 8、spring项目bootstrap.yml定义服务名及启动参数 spring: application: name: sso-api profiles: active: local cloud: nacos: discovery: server-addr: ${NACOS_SERVER:}:${NACOS_PORT:8848} namespace: ${NACOS_NAMESPACE:} config: server-addr: ${NACOS_SERVER:}:${NACOS_PORT:8848} namespace: ${NACOS_NAMESPACE:} file-extension: yml shared-dataids: application-sso-${spring.profiles.active}.yml refreshable-dataids: application-sso-${spring.profiles.active}.yml gradle clean bootJar生成jar包，构建docker镜像，deployment中为容器设置预启动命令及参数通过3个环境变量在nacos服务中确定配置，完成注册 containers: - args: - &#39;-jar&#39; - ./api.jar - &#39;-XX:+UseG1GC&#39; - &#39;-XX:+HeapDumpOnOutOfMemoryError&#39; - &#39;-Xms512M&#39; - &#39;-Xmx4G&#39; - &#39;--spring.profiles.active=prod&#39; - &#39;--NACOS_SERVER=nacos-svc&#39; - &#39;--NACOS_NAMESPACE=829cc240-d9&#39;","categories":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/categories/k8s/"},{"name":"spring","slug":"k8s/spring","permalink":"https://mingzark.github.io/categories/k8s/spring/"}],"tags":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/tags/k8s/"},{"name":"spring","slug":"spring","permalink":"https://mingzark.github.io/tags/spring/"}]},{"title":"kubernetes--pod的生命周期管理","slug":"kubernetes-pod的生命周期管理","date":"2021-02-03T06:20:47.000Z","updated":"2021-02-03T09:13:37.738Z","comments":true,"path":"2021/02/03/kubernetes-pod的生命周期管理/","link":"","permalink":"https://mingzark.github.io/2021/02/03/kubernetes-pod%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%A1%E7%90%86/","excerpt":"Kubernetes 支持 postStart 和 preStop 事件。当一个主容器启动后，Kubernetes 将立即发送 postStart 事件；在主容器被终结之前，Kubernetes 将发送一个 preStop 事件。","text":"Kubernetes 支持 postStart 和 preStop 事件。当一个主容器启动后，Kubernetes 将立即发送 postStart 事件；在主容器被终结之前，Kubernetes 将发送一个 preStop 事件。 说明服务更新时时常出现服务繁忙情况，因为后端服务代理在经过nginx之后还有一层网关服务，网关服务无法通过k8s获取到pod的健康状态，而是通过nacos获取的，pod关闭后，nacos健康状态无法及时更新，导致网关服务路由到不健康的pod服务上。 通过lifecycle的preStop可以很方便解决这一问题。 lifecycle创建资源对象时，可以使用lifecycle来管理容器在运行前和关闭前的一些动作。 lifecycle有两种回调函数： postStart：容器创建成功后，运行前的任务，用于资源部署、环境准备等。 preStop：在容器被终止前的任务，用于优雅关闭应用程序、通知其他系统等等。 通过预停止脚本，当容器关闭前会将服务从nacos下线 shell脚本1curl -X PUT &quot;nacos地址&#x2F;nacos&#x2F;v1&#x2F;ns&#x2F;instance?serviceName&#x3D;$MY_SERVICE_NAME&amp;ip&#x3D;$MY_POD_IP&amp;port&#x3D;$MY_POD_PORT&amp;enabled&#x3D;false&amp;namespaceId&#x3D;&quot; yaml文件1234567891011121314151617181920212223containers: - env: - name: LANG value: en_US.UTF-8 - name: JAVA_HOME value: &#x2F;usr&#x2F;java&#x2F;jdk - name: TZ value: Asia&#x2F;Shanghai - name: MY_SERVICE_NAME value: - name: MY_POD_PORT value: &#39;8080&#39; - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP image: &#39;&#39; imagePullPolicy: Always name: lifecycle: preStop: exec: command: [&quot;&#x2F;bin&#x2F;sh&quot;,&quot;&#x2F;pre-stop.sh&quot;]","categories":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/categories/k8s/"},{"name":"pod","slug":"k8s/pod","permalink":"https://mingzark.github.io/categories/k8s/pod/"}],"tags":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/tags/k8s/"},{"name":"pod","slug":"pod","permalink":"https://mingzark.github.io/tags/pod/"}]},{"title":"elasticsearch通过logstash同步mysql","slug":"elasticsearch通过logstash同步mysql","date":"2021-01-12T08:06:50.000Z","updated":"2021-03-24T01:10:10.043Z","comments":true,"path":"2021/01/12/elasticsearch通过logstash同步mysql/","link":"","permalink":"https://mingzark.github.io/2021/01/12/elasticsearch%E9%80%9A%E8%BF%87logstash%E5%90%8C%E6%AD%A5mysql/","excerpt":"说明 elasticsearch版本：7.4 logstash版本：7.4 mysql版本：8.0","text":"说明 elasticsearch版本：7.4 logstash版本：7.4 mysql版本：8.0 logstash配置文件12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152input &#123; jdbc &#123; jdbc_driver_class &#x3D;&gt; &quot;com.mysql.jdbc.Driver&quot; jdbc_driver_library &#x3D;&gt; &quot;&#x2F;ssd&#x2F;1&#x2F;share&#x2F;ls-cn-***&#x2F;logstash&#x2F;current&#x2F;config&#x2F;custom&#x2F;mysql-connector-java-8.0.18.jar&quot; jdbc_connection_string &#x3D;&gt; &quot;jdbc:mysql:&#x2F;&#x2F;***:3306&#x2F;数据库名?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false&amp;allowLoadLocalInfile&#x3D;false&amp;autoDeserialize&#x3D;false&quot; jdbc_user &#x3D;&gt; &quot;&quot; jdbc_password &#x3D;&gt; &quot;&quot; #sql是否允许分页 jdbc_paging_enabled &#x3D;&gt; &quot;true&quot; jdbc_page_size &#x3D;&gt; &quot;100000&quot; #查询sql，通过update_time实现增量更新，order排序确保更新时间为最新时间 statement &#x3D;&gt; &quot;select &#96;a&#96;.&#96;id&#96; AS &#96;id&#96; where &#96;a&#96;.&#96;update_time&#96;&gt;&#x3D; :sql_last_value order by update_time ASC&quot; schedule &#x3D;&gt; &quot; *&#x2F;5 * * * * *&quot; record_last_run &#x3D;&gt; true last_run_metadata_path &#x3D;&gt; &quot;&#x2F;ssd&#x2F;1&#x2F;ls-cn-zz11yyn8e00a&#x2F;logstash&#x2F;data&#x2F;last_run_metadata_test_resource_company_update_time0107.txt&quot; clean_run &#x3D;&gt; false #分数字类型和时间戳类型，默认数字，无更新操作可以使用主键做增量更新 tracking_column_type &#x3D;&gt; &quot;timestamp&quot; use_column_value &#x3D;&gt; true tracking_column &#x3D;&gt; &quot;update_time&quot; &#125;&#125;filter &#123;#更新es时间存储格式为datetime类型，es创建索引需要增加format支持datetime格式# &quot;create_time&quot;: &#123;# &quot;type&quot;: &quot;date&quot;,# &quot;format&quot;: &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd&quot;&#125; ruby&#123; code &#x3D;&gt; &quot; event.set(&#39;create_time&#39;, (event.get(&#39;create_time&#39;).time.localtime).strftime(&#39;%Y-%m-%d %H:%M:%S&#39;)) event.set(&#39;review_time&#39;, (event.get(&#39;review_time&#39;).time.localtime).strftime(&#39;%Y-%m-%d %H:%M:%S&#39;)) &quot; &#125; date &#123; match &#x3D;&gt; [&quot;create_time&quot;, &quot;yyyy-MM-dd HH:mm:ss&quot;] &#125; date &#123; match &#x3D;&gt; [&quot;review_time&quot;, &quot;yyyy-MM-dd HH:mm:ss&quot;] &#125; mutate &#123; remove_field &#x3D;&gt; [&quot;@timestamp&quot;] &#125;&#125;output &#123; elasticsearch &#123; hosts &#x3D;&gt; &quot;http:&#x2F;&#x2F;*****:9200&quot; index &#x3D;&gt; &quot;es_index&quot; user &#x3D;&gt; &quot;elastic&quot; password &#x3D;&gt; &quot;****&quot; document_id &#x3D;&gt; &quot;%&#123;id&#125;&quot; &#125;&#125; devtools常用接口 #修改索引最大查询数 PUT es_index/_settings{ “index”:{ “max_result_window”:1000000 }} #定义索引别名 POST /_aliases{ “actions”: [ { “add”: { “index”: “es_index0114”, “alias”: “es_index” } } ]} #es使用sql语法 POST /_sql{ “query”: “select * from es_index where id = ‘26427’”} 注意事项 logstash支持mysql视图查询，但数据过多时查询很慢，iops压力会很大，建议使用查询语句查询 logstash支持秒级查询，格式同crontab mysql默认时间0000-00-00,非有效日期,logstash无法同步","categories":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"}],"tags":[{"name":"es","slug":"es","permalink":"https://mingzark.github.io/tags/es/"}]},{"title":"nginx反向代理dns缓存问题","slug":"nginx反向代理dns缓存问题","date":"2020-12-16T07:36:05.000Z","updated":"2020-12-16T08:18:27.000Z","comments":true,"path":"2020/12/16/nginx反向代理dns缓存问题/","link":"","permalink":"https://mingzark.github.io/2020/12/16/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86dns%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/","excerpt":"为解决前端跨域问题，使用了nginx反向代理做处理","text":"为解决前端跨域问题，使用了nginx反向代理做处理 location ^~ /public_static/ { proxy_pass https://example.com;} 问题简介 ​ example.com为cdn域名，ip是动态解析的，上线几天后，发现网站资源加载不出来，查看nginx日志发现资源全部超时了。查询nginx相关文档，确认nginx在启动加载配置文件时，会把域名接信息成ip，然后把IP缓存起来，以后会一直使用解析到的IP并且不会再更改，除非重新启动Nginx，Nginx才会重新解析域名。 解决方案第一种 使用nginx的resolver 默认nginx会使用/etc/resolv.conf下的域名服务器进行解析 可以通过在nginx配置文件中的http部分或者server部分设定如下配置 server { ​ resolver 100.100.2.136 100.100.2.138 valid=3000s; ​ resolver_timeout 3s; } resolver 后面指定DNS服务器，可以指定多个，空格隔开 valid设置DNS缓存失效时间 resolver_timeout 指定解析域名时，DNS服务器的超时时间，建议3秒左右 ​ 当resolver 后面跟多个DNS服务器时，一定要保证这些DNS服务器都是有效的，因为这种是负载均衡模式的，当DNS记录失效了(超过valid时间)，首先由第一个DNS服务器去解析，下一次继续失效时由第二个DNS服务器去解析，如有任何一个DNS服务器故障，那么这一次的解析会一直持续到resolver_timeout，然后解析失败，且日志报错解析不了域名，通过页面抛出502错误。 第二种 使用tengine版本2.1.2以上，Tengine的ngx_http_upstream_dynamic_module模块，提供了在运行时动态解析upstream中server域名的功能。 upstream backend {dynamic_resolve fallback=stale fail_timeout=30s;server a.com;server b.com;}","categories":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"},{"name":"nginx","slug":"centos/nginx","permalink":"https://mingzark.github.io/categories/centos/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/tags/nginx/"}]},{"title":"k8s部署nacos集群","slug":"k8s部署nacos集群","date":"2020-12-02T02:27:41.000Z","updated":"2020-12-02T03:44:50.000Z","comments":true,"path":"2020/12/02/k8s部署nacos集群/","link":"","permalink":"https://mingzark.github.io/2020/12/02/k8s%E9%83%A8%E7%BD%B2nacos%E9%9B%86%E7%BE%A4/","excerpt":"说明​ 根据GitHub上k8s搭建nacos集群教程部署后，手动删除pod，leader无法正常选举，于是改用deployment部署，因未使用nacos持久化实例，所以未挂载共享存储，有需要可以自行配置。","text":"说明​ 根据GitHub上k8s搭建nacos集群教程部署后，手动删除pod，leader无法正常选举，于是改用deployment部署，因未使用nacos持久化实例，所以未挂载共享存储，有需要可以自行配置。 k8s集群版本：1.18.8-aliyun.1 nacos版本：1.3.2 Pod控制器：Deployment 服务器数量：3 Deployment数量：3 数据库版本：阿里云RDS mysql8.0 初始化sql123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198CREATE TABLE &#96;config_info&#96; ( &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;, &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;, &#96;group_id&#96; varchar(255) DEFAULT NULL, &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;, &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;, &#96;src_user&#96; text COMMENT &#39;source user&#39;, &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;, &#96;app_name&#96; varchar(128) DEFAULT NULL, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;, &#96;c_desc&#96; varchar(256) DEFAULT NULL, &#96;c_use&#96; varchar(64) DEFAULT NULL, &#96;effect&#96; varchar(64) DEFAULT NULL, &#96;type&#96; varchar(64) DEFAULT NULL, &#96;c_schema&#96; text, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_configinfo_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; config_info_aggr *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;config_info_aggr&#96; ( &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;, &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;, &#96;group_id&#96; varchar(255) NOT NULL COMMENT &#39;group_id&#39;, &#96;datum_id&#96; varchar(255) NOT NULL COMMENT &#39;datum_id&#39;, &#96;content&#96; longtext NOT NULL COMMENT &#39;内容&#39;, &#96;gmt_modified&#96; datetime NOT NULL COMMENT &#39;修改时间&#39;, &#96;app_name&#96; varchar(128) DEFAULT NULL, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_configinfoaggr_datagrouptenantdatum&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;datum_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;增加租户字段&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; config_info_beta *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;config_info_beta&#96; ( &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;, &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;, &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;, &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;, &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;, &#96;beta_ips&#96; varchar(1024) DEFAULT NULL COMMENT &#39;betaIps&#39;, &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;, &#96;src_user&#96; text COMMENT &#39;source user&#39;, &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_configinfobeta_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_beta&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; config_info_tag *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;config_info_tag&#96; ( &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;, &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;, &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;, &#96;tag_id&#96; varchar(128) NOT NULL COMMENT &#39;tag_id&#39;, &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;, &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;, &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;, &#96;src_user&#96; text COMMENT &#39;source user&#39;, &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_configinfotag_datagrouptenanttag&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;tag_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_tag&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; config_tags_relation *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;config_tags_relation&#96; ( &#96;id&#96; bigint(20) NOT NULL COMMENT &#39;id&#39;, &#96;tag_name&#96; varchar(128) NOT NULL COMMENT &#39;tag_name&#39;, &#96;tag_type&#96; varchar(64) DEFAULT NULL COMMENT &#39;tag_type&#39;, &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;, &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;, &#96;nid&#96; bigint(20) NOT NULL AUTO_INCREMENT, PRIMARY KEY (&#96;nid&#96;), UNIQUE KEY &#96;uk_configtagrelation_configidtag&#96; (&#96;id&#96;,&#96;tag_name&#96;,&#96;tag_type&#96;), KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_tag_relation&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; group_capacity *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;group_capacity&#96; ( &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;, &#96;group_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Group ID，空字符表示整个集群&#39;, &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;, &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;, &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;, &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数，，0表示使用默认值&#39;, &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;, &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_group_id&#96; (&#96;group_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;集群、各Group容量信息表&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; his_config_info *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;his_config_info&#96; ( &#96;id&#96; bigint(64) unsigned NOT NULL, &#96;nid&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT, &#96;data_id&#96; varchar(255) NOT NULL, &#96;group_id&#96; varchar(128) NOT NULL, &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;, &#96;content&#96; longtext NOT NULL, &#96;md5&#96; varchar(32) DEFAULT NULL, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, &#96;src_user&#96; text, &#96;src_ip&#96; varchar(20) DEFAULT NULL, &#96;op_type&#96; char(10) DEFAULT NULL, &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;, PRIMARY KEY (&#96;nid&#96;), KEY &#96;idx_gmt_create&#96; (&#96;gmt_create&#96;), KEY &#96;idx_gmt_modified&#96; (&#96;gmt_modified&#96;), KEY &#96;idx_did&#96; (&#96;data_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;多租户改造&#39;;&#x2F;******************************************&#x2F;&#x2F;* 数据库全名 &#x3D; nacos_config *&#x2F;&#x2F;* 表名称 &#x3D; tenant_capacity *&#x2F;&#x2F;******************************************&#x2F;CREATE TABLE &#96;tenant_capacity&#96; ( &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;, &#96;tenant_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Tenant ID&#39;, &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;, &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;, &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;, &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数&#39;, &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;, &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;, &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_tenant_id&#96; (&#96;tenant_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;租户容量信息表&#39;;CREATE TABLE &#96;tenant_info&#96; ( &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;, &#96;kp&#96; varchar(128) NOT NULL COMMENT &#39;kp&#39;, &#96;tenant_id&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_id&#39;, &#96;tenant_name&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_name&#39;, &#96;tenant_desc&#96; varchar(256) DEFAULT NULL COMMENT &#39;tenant_desc&#39;, &#96;create_source&#96; varchar(32) DEFAULT NULL COMMENT &#39;create_source&#39;, &#96;gmt_create&#96; bigint(20) NOT NULL COMMENT &#39;创建时间&#39;, &#96;gmt_modified&#96; bigint(20) NOT NULL COMMENT &#39;修改时间&#39;, PRIMARY KEY (&#96;id&#96;), UNIQUE KEY &#96;uk_tenant_info_kptenantid&#96; (&#96;kp&#96;,&#96;tenant_id&#96;), KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;tenant_info&#39;;CREATE TABLE &#96;users&#96; ( &#96;username&#96; varchar(50) NOT NULL PRIMARY KEY, &#96;password&#96; varchar(500) NOT NULL, &#96;enabled&#96; boolean NOT NULL);CREATE TABLE &#96;roles&#96; ( &#96;username&#96; varchar(50) NOT NULL, &#96;role&#96; varchar(50) NOT NULL, UNIQUE INDEX &#96;idx_user_role&#96; (&#96;username&#96; ASC, &#96;role&#96; ASC) USING BTREE);CREATE TABLE &#96;permissions&#96; ( &#96;role&#96; varchar(50) NOT NULL, &#96;resource&#96; varchar(255) NOT NULL, &#96;action&#96; varchar(8) NOT NULL, UNIQUE INDEX &#96;uk_role_permission&#96; (&#96;role&#96;,&#96;resource&#96;,&#96;action&#96;) USING BTREE);INSERT INTO users (username, password, enabled) VALUES (&#39;nacos&#39;, &#39;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#39;, TRUE);INSERT INTO roles (username, role) VALUES (&#39;nacos&#39;, &#39;ROLE_ADMIN&#39;); YAML文件configmap 自行调整数据库连接信息apiVersion: v1kind: ConfigMap metadata: name: nacos-cloud-config namespace: prodata: cluster.conf: | 192.168.10.1:8848 192.168.10.2:8848 192.168.10.3:8848 application.properties: | server.contextPath&#x3D;&#x2F;nacos server.servlet.contextPath&#x3D;&#x2F;nacos server.port&#x3D;8848 management.metrics.export.elastic.enabled&#x3D;false management.metrics.export.influx.enabled&#x3D;false server.tomcat.accesslog.enabled&#x3D;true server.tomcat.accesslog.pattern&#x3D;%h %l %u %t &quot;%r&quot; %s %b %D %&#123;User-Agent&#125;i server.tomcat.basedir&#x3D; nacos.security.ignore.urls&#x3D;&#x2F;,&#x2F;**&#x2F;*.css,&#x2F;**&#x2F;*.js,&#x2F;**&#x2F;*.html,&#x2F;**&#x2F;*.map,&#x2F;**&#x2F;*.svg,&#x2F;**&#x2F;*.png,&#x2F;**&#x2F;*.ico,&#x2F;console-fe&#x2F;public&#x2F;**,&#x2F;v1&#x2F;auth&#x2F;login,&#x2F;v1&#x2F;console&#x2F;health&#x2F;**,&#x2F;v1&#x2F;cs&#x2F;**,&#x2F;v1&#x2F;ns&#x2F;**,&#x2F;v1&#x2F;cmdb&#x2F;**,&#x2F;actuator&#x2F;**,&#x2F;v1&#x2F;console&#x2F;server&#x2F;** spring.datasource.platform&#x3D;mysql db.num&#x3D;1 db.url.0&#x3D;jdbc:mysql:&#x2F;&#x2F;数据库地址:3306&#x2F;数据名?characterEncoding&#x3D;utf8&amp;connectTimeout&#x3D;1000&amp;socketTimeout&#x3D;3000&amp;autoReconnect&#x3D;true db.user&#x3D; db.password&#x3D; nacos-logback.xml: | &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; &lt;configuration scan&#x3D;&quot;true&quot; scanPeriod&#x3D;&quot;10 seconds&quot;&gt; &lt;springProperty scope&#x3D;&quot;context&quot; name&#x3D;&quot;logPath&quot; source&#x3D;&quot;nacos.logs.path&quot; defaultValue&#x3D;&quot;$&#123;nacos.home&#125;&#x2F;logs&quot;&#x2F;&gt; &lt;property name&#x3D;&quot;LOG_HOME&quot; value&#x3D;&quot;$&#123;logPath&#125;&quot;&#x2F;&gt; &lt;appender name&#x3D;&quot;cmdb-main&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;nacos.home&#125;&#x2F;logs&#x2F;cmdb-main.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;nacos.home&#125;&#x2F;logs&#x2F;cmdb-main.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;2GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;CONSOLE&quot; class&#x3D;&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-server&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-server.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-server.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;async-naming-server&quot; class&#x3D;&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;discardingThreshold&gt;0&lt;&#x2F;discardingThreshold&gt; &lt;queueSize&gt;1024&lt;&#x2F;queueSize&gt; &lt;neverBlock&gt;true&lt;&#x2F;neverBlock&gt; &lt;appender-ref ref&#x3D;&quot;naming-server&quot;&#x2F;&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-raft&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-raft.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-raft.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;async-naming-raft&quot; class&#x3D;&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;discardingThreshold&gt;0&lt;&#x2F;discardingThreshold&gt; &lt;queueSize&gt;1024&lt;&#x2F;queueSize&gt; &lt;neverBlock&gt;true&lt;&#x2F;neverBlock&gt; &lt;appender-ref ref&#x3D;&quot;naming-raft&quot;&#x2F;&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-distro&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-distro.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-distro.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;async-naming-distro&quot; class&#x3D;&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;discardingThreshold&gt;0&lt;&#x2F;discardingThreshold&gt; &lt;queueSize&gt;1024&lt;&#x2F;queueSize&gt; &lt;neverBlock&gt;true&lt;&#x2F;neverBlock&gt; &lt;appender-ref ref&#x3D;&quot;naming-distro&quot;&#x2F;&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-event&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-event.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-event.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;async-naming-event&quot; class&#x3D;&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;discardingThreshold&gt;0&lt;&#x2F;discardingThreshold&gt; &lt;queueSize&gt;1024&lt;&#x2F;queueSize&gt; &lt;neverBlock&gt;true&lt;&#x2F;neverBlock&gt; &lt;appender-ref ref&#x3D;&quot;naming-event&quot;&#x2F;&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-push&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-push.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-push.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-rt&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-rt.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-rt.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%msg%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;naming-performance&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;naming-performance.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;naming-performance.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;!--config module logback config--&gt; &lt;appender name&#x3D;&quot;dumpFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-dump.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-dump.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;2GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;pullFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-pull.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-pull.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;20MB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;128MB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;fatalFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-fatal.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-fatal.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;20MB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;128MB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;memoryFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-memory.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-memory.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;20MB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;128MB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;pullCheckFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-pull-check.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-pull-check.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%msg%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;clientLog&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-client-request.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-client-request.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;2GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date|%msg%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;traceLog&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-trace.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-trace.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;2GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date|%msg%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;notifyLog&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-notify.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-notify.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;1GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;3GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;startLog&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;config-server.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;config-server.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;50MB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;512MB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;rootFile&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;nacos.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;nacos.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;50MB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;512MB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;appender name&#x3D;&quot;nacos-address&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;file&gt;$&#123;LOG_HOME&#125;&#x2F;nacos-address.log&lt;&#x2F;file&gt; &lt;append&gt;true&lt;&#x2F;append&gt; &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;nacos-address.log.%d&#123;yyyy-MM-dd&#125;.%i&lt;&#x2F;fileNamePattern&gt; &lt;maxFileSize&gt;2GB&lt;&#x2F;maxFileSize&gt; &lt;MaxHistory&gt;7&lt;&#x2F;MaxHistory&gt; &lt;totalSizeCap&gt;7GB&lt;&#x2F;totalSizeCap&gt; &lt;cleanHistoryOnStart&gt;true&lt;&#x2F;cleanHistoryOnStart&gt; &lt;&#x2F;rollingPolicy&gt; &lt;encoder&gt; &lt;Pattern&gt;%date %level %msg%n%n&lt;&#x2F;Pattern&gt; &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;&#x2F;encoder&gt; &lt;&#x2F;appender&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.address.main&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;nacos-address&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.cmdb.main&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;cmdb-main&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.main&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;async-naming-server&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.raft&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;async-naming-raft&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.distro&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;async-naming-distro&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.event&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;async-naming-event&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.push&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;naming-push&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.rt&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;naming-rt&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.naming.performance&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;naming-performance&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.dumpLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;dumpFile&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.pullLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;pullFile&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.pullCheckLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;pullCheckFile&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.fatal&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;fatalFile&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.monitorLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;memoryFile&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.clientLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;info&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;clientLog&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.notifyLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;notifyLog&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.traceLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;info&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;traceLog&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.config.startLog&quot; additivity&#x3D;&quot;false&quot;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;startLog&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;springProfile name&#x3D;&quot;standalone&quot;&gt; &lt;logger name&#x3D;&quot;org.springframework&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;org.apache.catalina.startup.DigesterFactory&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;org.apache.catalina.util.LifecycleBase&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;ERROR&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;org.apache.coyote.http11.Http11NioProtocol&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;WARN&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;logger name&#x3D;&quot;org.apache.tomcat.util.net.NioSelectorPool&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;WARN&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;&#x2F;springProfile&gt; &lt;logger name&#x3D;&quot;com.alibaba.nacos.core.listener.StartingSpringApplicationRunListener&quot;&gt; &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot;&#x2F;&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;&#x2F;logger&gt; &lt;root&gt; &lt;level value&#x3D;&quot;INFO&quot;&#x2F;&gt; &lt;appender-ref ref&#x3D;&quot;rootFile&quot;&#x2F;&gt; &lt;&#x2F;root&gt; &lt;&#x2F;configuration&gt; deploy namespace：pro 查看集群leader 1curl -X GET &#39;127.0.0.1:8848&#x2F;nacos&#x2F;v1&#x2F;ns&#x2F;raft&#x2F;leader&#39; 确保配置存在于指定namespace，而非public 确保服务指定的namespace id正确无误 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299apiVersion: apps&#x2F;v1kind: Deploymentmetadata: name: deploy-nacos-cloud-1 labels: name: deploy-nacos-cloud-1 namespace: prospec: replicas: 1 selector: matchLabels: name: nacos-cloud-1 template: metadata: labels: name: nacos-cloud-1 cloud-name: nacos-cloud spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: cloud-name operator: In values: - nacos-cloud topologyKey: kubernetes.io&#x2F;hostname containers: - name: nacos-cloud-1 image: nacos-server:1.3.2 env: - name: NACOS_SERVER_IP value: 192.168.10.1 - name: JVM_XMS value: 256m - name: JVM_XMX value: 512m - name: JVM_XMN value: 192m - name: JVM_MS value: 256m - name: JVM_MMS value: 256m - name: TZ value: Asia&#x2F;Shanghai ports: - containerPort: 8848 protocol: TCP livenessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 readinessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 volumeMounts: - mountPath: &quot;&#x2F;home&#x2F;nacos&#x2F;conf&quot; name: nacos-cloud-config volumes: - name: nacos-cloud-config configMap: name: nacos-cloud-config---kind: ServiceapiVersion: v1metadata: name: svc-nacos-cloud-1 labels: name: svc-nacos-cloud-1 namespace: prospec: clusterIP: 192.168.10.1 selector: name: nacos-cloud-1 ports: - name: port1 protocol: TCP port: 8848 targetPort: 8848---apiVersion: apps&#x2F;v1kind: Deploymentmetadata: name: deploy-nacos-cloud-2 labels: name: deploy-nacos-cloud-2 namespace: prospec: replicas: 1 selector: matchLabels: name: nacos-cloud-2 template: metadata: labels: name: nacos-cloud-2 cloud-name: nacos-cloud spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: cloud-name operator: In values: - nacos-cloud topologyKey: kubernetes.io&#x2F;hostname containers: - name: nacos-cloud-2 image: nacos-server:1.3.2 env: - name: NACOS_SERVER_IP value: 192.168.10.2 - name: JVM_XMS value: 256m - name: JVM_XMX value: 512m - name: JVM_XMN value: 192m - name: JVM_MS value: 256m - name: JVM_MMS value: 256m - name: TZ value: Asia&#x2F;Shanghai ports: - containerPort: 8848 protocol: TCP livenessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 readinessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 volumeMounts: - mountPath: &quot;&#x2F;home&#x2F;nacos&#x2F;conf&quot; name: nacos-cloud-config volumes: - name: nacos-cloud-config configMap: name: nacos-cloud-config---kind: ServiceapiVersion: v1metadata: name: svc-nacos-cloud-2 labels: name: svc-nacos-cloud-2 namespace: prospec: clusterIP: 192.168.10.2 selector: name: nacos-cloud-2 ports: - name: port1 protocol: TCP port: 8848 targetPort: 8848---apiVersion: apps&#x2F;v1kind: Deploymentmetadata: name: deploy-nacos-cloud-3 labels: name: deploy-nacos-cloud-3 namespace: prospec: replicas: 1 selector: matchLabels: name: nacos-cloud-3 template: metadata: labels: name: nacos-cloud-3 cloud-name: nacos-cloud spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: cloud-name operator: In values: - nacos-cloud topologyKey: kubernetes.io&#x2F;hostname containers: - name: nacos-cloud-3 image: nacos-server:1.3.2 env: - name: NACOS_SERVER_IP value: 192.168.10.3 - name: JVM_XMS value: 256m - name: JVM_XMX value: 512m - name: JVM_XMN value: 192m - name: JVM_MS value: 256m - name: JVM_MMS value: 256m - name: TZ value: Asia&#x2F;Shanghai ports: - containerPort: 8848 protocol: TCP livenessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 readinessProbe: failureThreshold: 3 httpGet: path: &#x2F;nacos&#x2F; port: 8848 scheme: HTTP initialDelaySeconds: 3 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 volumeMounts: - mountPath: &quot;&#x2F;home&#x2F;nacos&#x2F;conf&quot; name: nacos-cloud-config volumes: - name: nacos-cloud-config configMap: name: nacos-cloud-config---kind: ServiceapiVersion: v1metadata: name: svc-nacos-cloud-3 labels: name: svc-nacos-cloud-3 namespace: prospec: clusterIP: 192.168.10.3 selector: name: nacos-cloud-3 ports: - name: port1 protocol: TCP port: 8848 targetPort: 8848---kind: ServiceapiVersion: v1metadata: name: nacos-svc labels: name: nacos-svc namespace: prospec: selector: cloud-name: nacos-cloud type: NodePort ports: - name: port1 protocol: TCP port: 8848 targetPort: 8848 nodePort: 30848","categories":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/categories/k8s/"},{"name":"nacos","slug":"k8s/nacos","permalink":"https://mingzark.github.io/categories/k8s/nacos/"}],"tags":[{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/tags/k8s/"},{"name":"nacos","slug":"nacos","permalink":"https://mingzark.github.io/tags/nacos/"}]},{"title":"openvpn搭建","slug":"openvpn搭建","date":"2020-12-01T08:11:01.000Z","updated":"2022-02-28T09:13:39.045Z","comments":true,"path":"2020/12/01/openvpn搭建/","link":"","permalink":"https://mingzark.github.io/2020/12/01/openvpn%E6%90%AD%E5%BB%BA/","excerpt":"说明 此法用于客户端通过OpenVPN服务器访问服务器所在私网网段","text":"说明 此法用于客户端通过OpenVPN服务器访问服务器所在私网网段 OpenVPN服务器操作系统centos7.8 OpenVPN版本2.4.9 easy-rsa版本3.0.8 使用tun模式 客户端IP地址池10.8.0.0/24 多个客户端直接可以通过OpenVPN实现通信 准备操作添加EPEL源1yum install epel-release -y 替换为阿里云的源12345sed -e &#39;s,^#baseurl,baseurl,g&#39; \\ -e &#39;s,^metalink,#metalink,g&#39; \\ -e &#39;s,^mirrorlist&#x3D;,#mirrorlist&#x3D;,g&#39; \\ -e &#39;s,http:&#x2F;&#x2F;download.fedoraproject.org&#x2F;pub,https:&#x2F;&#x2F;mirrors.aliyun.com,g&#39; \\ -i &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo 更新软件12yum makecacheyum update -y 修改sysctl参数12echo &quot;net.ipv4.ip_forward &#x3D; 1&quot; &gt;&gt;&#x2F;etc&#x2F;sysctl.confsysctl -p 安装OpenVPN软件1yum install -y openvpn easy-rsa lrzsz iptables-services 配置服务器证书复制文件 拷贝easy-rsa的文件到/etc/openvpn下 12cp -r &#x2F;usr&#x2F;share&#x2F;easy-rsa&#x2F;3.0.8 &#x2F;etc&#x2F;openvpn&#x2F;easy-rsacp &#x2F;usr&#x2F;share&#x2F;doc&#x2F;easy-rsa-3.0.8&#x2F;vars.example &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars 修改vars 编辑vars文件 1vim &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars 修改以下几项 123456789101112#set_var EASYRSA_REQ_COUNTRY &quot;US&quot;#set_var EASYRSA_REQ_PROVINCE &quot;California&quot;#set_var EASYRSA_REQ_CITY &quot;San Francisco&quot;#set_var EASYRSA_REQ_ORG &quot;Copyleft Certificate Co&quot;#set_var EASYRSA_REQ_EMAIL &quot;me@example.net&quot;#set_var EASYRSA_REQ_OU &quot;My Organizational Unit&quot;#set_var EASYRSA_KEY_SIZE 4096#set_var EASYRSA_ALGO rsa#set_var EASYRSA_CA_EXPIRE 3650#set_var EASYRSA_CERT_EXPIRE 3650#set_var EASYRSA_CERT_RENEW 180#set_var EASYRSA_CRL_DAYS 60 初始化PKI和CA切换目录1cd &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa 创建PKI1.&#x2F;easyrsa init-pki 创建CA1.&#x2F;easyrsa build-ca nopass 创建服务器证书1.&#x2F;easyrsa build-server-full openvpn-server nopass 创建DH证书1.&#x2F;easyrsa gen-dh 拷贝证书12345678mkdir -p &#x2F;etc&#x2F;openvpn&#x2F;pkicp &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;ca.crt \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;dh.pem \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;issued&#x2F;openvpn-server.crt \\ &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;private&#x2F;openvpn-server.key \\ &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ln -sv &#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;crl.pem &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;crl.pemchown -R root:openvpn &#x2F;etc&#x2F;openvpn&#x2F;pki 创建ta.key1openvpn --genkey --secret &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key 配置OpenVPN创建日志目录12mkdir -p &#x2F;var&#x2F;log&#x2F;openvpnchown -R openvpn:openvpn &#x2F;var&#x2F;log&#x2F;openvpn 创建客户端配置目录12mkdir -p &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;&#123;config,user&#125;chown -R root:openvpn &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;&#123;config,user&#125; 配置OpenVPN服务器端1vim &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;srv.conf 下面内容按需更改 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# 监听地址local 0.0.0.0# 监听端口port 51194# 通信协议proto tcp# TUN模式还是TAP模式dev tun# 证书ca &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ca.crtcert &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;openvpn-server.crtkey &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;openvpn-server.keydh &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;dh.pemcrl-verify &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;crl.pem# 禁用OpenVPN自定义缓冲区大小，由操作系统控制sndbuf 0rcvbuf 0# TLS rules “client” | “server”remote-cert-tls &quot;client&quot;# TLS认证tls-auth &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key# TLS最小版本#tls-version-min &quot;1.2&quot;# 重新协商数据交换的key，默认3600#reneg-sec 3600# 在此文件中维护客户端与虚拟IP地址之间的关联记录# 如果OpenVPN重启，重新连接的客户端可以被分配到先前分配的虚拟IP地址ifconfig-pool-persist &#x2F;etc&#x2F;openvpn&#x2F;ipp.txt# 配置client配置文件client-config-dir &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config# 该网段为 open VPN 虚拟网卡网段，不要和内网网段冲突即可。server 10.8.0.0 255.255.255.0# 给客户端推送自定义路由#push &quot;route 192.168.0.0 255.255.255.0&quot;# 所有客户端的默认网关都将重定向到VPN#push &quot;redirect-gateway def1 bypass-dhcp&quot; # 向客户端推送DNS配置#push &quot;dhcp-option DNS 223.5.5.5&quot;#push &quot;dhcp-option DNS 223.6.6.6&quot;# 允许客户端之间互相访问client-to-client# 限制最大客户端数量#max-clients 10# 客户端连接时运行脚本#client-connect ovpns.script# 客户端断开连接时运行脚本#client-disconnect ovpns.script# 保持连接时间keepalive 20 120# 开启vpn压缩comp-lzo# 允许多人使用同一个证书连接VPN，不建议使用，注释状态#duplicate-cn# 运行用户user openvpn#运行组group openvpn# 持久化选项可以尽量避免访问那些在重启之后由于用户权限降低而无法访问的某些资源persist-keypersist-tun# 显示当前的连接状态status &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn-status.log# 日志路径，不指定文件路径时输出到控制台# log代表每次启动时清空日志文件#log &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn.log# log-append代表追加写入到日志文件#log-append &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;openvpn.log# 日志级别verb 4# 忽略过多的重复信息，相同类别的信息只有前20条会输出到日志文件中mute 20 启动OpenVPN-server123chown -R root:openvpn &#x2F;etc&#x2F;openvpnsystemctl enable openvpn-server@srv.servicesystemctl start openvpn-server@srv.service 开启iptables策略12iptables -t nat -A POSTROUTING -s 10.8.0.0&#x2F;24 -j MASQUERADEiptables -t nat -A POSTROUTING -s 10.8.0.0&#x2F;24 -d 172.16.0.0&#x2F;12 -j SNAT --to-source 172.17.190.180 定期更新CRL说明 OpenVPN的server配置里面添加了crl-verify之后，需要给crl定期更新 如果crl文件长期不更新，过期之后，OpenVPN会报无法验证证书，导致无法连接OpenVPN 配置systemd timer定义Service12345678910vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;easyrsa-gen-crl.service[Unit]Description&#x3D;easyrsa-gen-crl[Service]Type&#x3D;oneshot# 重新生成CRL文件ExecStart&#x3D;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;easyrsa gen-crl# 命令完成之后重启OpenVPN服务ExecStartPost&#x3D;&#x2F;usr&#x2F;bin&#x2F;systemctl restart openvpn-server@srv.serviceWorkingDirectory&#x3D;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa 定义timer1234567891011vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;easyrsa-gen-crl.timer[Unit]Description&#x3D;easyrsa-gen-crl[Timer]# 每周一凌晨4点触发easyrsa-gen-crl.serviceOnCalendar&#x3D;Mon *-*-* 04:00:00Persistent&#x3D;true[Install]WantedBy&#x3D;timers.target 启动timer12systemctl enable easyrsa-gen-crl.timersystemctl start easyrsa-gen-crl.timer 立刻启动service1systemctl start easy-rsa-gen-crl.service 查看Service日志1journalctl -xfu easy-rsa-gen-crl.service 查看timer状态1systemctl status easyrsa-gen-crl.timer 客户端管理客户端配置模板123456789101112131415161718192021222324252627282930313233vim &#x2F;etc&#x2F;openvpn&#x2F;templates&#x2F;ovpn.template# 配置为客户端模式client# 与服务器端保持一致proto tcp# 与服务器端保持一致dev tun# 配置服务器端的地址和端口remote 服务端ip 51194resolv-retry infinitenobindpersist-keypersist-tuncomp-lzonice 0verb 3mute 10# 禁用OpenVPN自定义缓冲区大小，由操作系统控制sndbuf 0rcvbuf 0# 禁止在内存中缓存passwordauth-nocache# TLS rules “client” | “server”remote-cert-tls server# 过滤从服务器端发过来的路由规则#pull-filter ignore redirect-gateway# 不从服务器端拉取路由规则#route-nopull# 手动指定所有流量走VPN#redirect-gateway def1# 客户端自定义路由，例如192.168.0.0&#x2F;24走VPN，192.168.1.0&#x2F;24不走VPN#route 192.168.0.0 255.255.255.0 vpn_gateway#route 192.168.1.0 255.255.255.0 net_gateway 指定客户端推送配置模板12345vim &#x2F;etc&#x2F;openvpn&#x2F;templates&#x2F;ipconfig_push.template# 给客户端推送固定的IP地址ifconfig-push #ipaddress# 255.255.255.0# 给客户端推送路由#iroute 172.17.0.0 255.255.0.0 客户端配置123vim &#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config&#x2F;user1# 给客户端推送固定的IP地址10.8.0.100ifconfig-push 10.8.0.100 255.255.255.0 用户管理脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142vim &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.shchmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh#!&#x2F;bin&#x2F;bashset -e# 定义环境变量export EASY_RSA_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&quot;export CLIENT_CONFIG_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;config&quot;export PKI_DIR&#x3D;&quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&quot;export TEMPLATES_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;templates&quot;export CLIENT_USER_DIR&#x3D;&quot;&#x2F;etc&#x2F;openvpn&#x2F;client&#x2F;user&quot;# 创建ovpn配置generate_ovpn() &#123; USER_OVPN&#x3D;&quot;$&#123;CLIENT_USER_DIR&#125;&#x2F;$&#123;EXPIRED&#125;-$&#123;USER&#125;.ovpn&quot; # 根据证书生成对应的ovpn文件 mkdir -p $&#123;CLIENT_USER_DIR&#125;&#x2F; cp -f $&#123;TEMPLATES_DIR&#125;&#x2F;ovpn.template $&#123;USER_OVPN&#125; echo &quot;&lt;ca&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;ca.crt &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;ca&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;cert&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;issued&#x2F;$&#123;USER&#125;.crt &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;cert&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;key&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat $&#123;PKI_DIR&#125;&#x2F;private&#x2F;$&#123;USER&#125;.key &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;key&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;tls-auth&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; cat &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;ta.key &gt;&gt; $&#123;USER_OVPN&#125; echo &quot;&lt;&#x2F;tls-auth&gt;&quot; &gt;&gt; $&#123;USER_OVPN&#125; sz --binary $&#123;USER_OVPN&#125;&#125;# 添加客户端IPclient_ip_config() &#123; # 根据ip地址生成对应的client-config sed -e &quot;s,#ipaddress#,$&#123;IPADDRESS&#125;,g&quot; \\ $&#123;TEMPLATES_DIR&#125;&#x2F;ipconfig_push.template \\ &gt; $&#123;CLIENT_CONFIG_DIR&#125;&#x2F;$&#123;USER&#125;&#125;# 生成客户端证书add_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa build-client-full $&#123;USER&#125; nopass&#125;# 注销客户端证书revoke_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; echo &quot;yes&quot; | $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa revoke $&#123;USER&#125; $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa gen-crl&#125;# 更新客户端证书renew_cert() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; echo &quot;yes&quot; | $&#123;EASY_RSA_DIR&#125;&#x2F;easyrsa renew $&#123;USER&#125; nopass&#125;# 检查证书过期时间check_cert_expired() &#123; export EXPIRED&#x3D;$(date --date&#x3D;&quot;$(openssl x509 -enddate -noout -in $&#123;PKI_DIR&#125;&#x2F;issued&#x2F;$&#123;USER&#125;.crt |cut -d&#x3D; -f 2)&quot; --iso-8601)&#125;# 创建用户add_user() &#123; if [[ -e &quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&#x2F;reqs&#x2F;$&#123;USER&#125;.req&quot; ]];then read -p&quot;此用户已经申请证书，是否重新生成？[y&#x2F;n]：&quot; ANSWER case $&#123;ANSWER&#125; in y|Y) revoke_cert check_cert_expired client_ip_config add_cert generate_ovpn exit 0 ;; n|N) check_cert_expired client_ip_config generate_ovpn ;; esac else add_cert check_cert_expired client_ip_config generate_ovpn fi&#125;# 删除用户del_user() &#123; revoke_cert rm -rf $&#123;CLIENT_USER_DIR&#125;&#x2F;*$&#123;USER&#125;.ovpn rm -rf $&#123;CLIENT_CONFIG_DIR&#125;&#x2F;$&#123;USER&#125;&#125;# 用户旧证过期重新生成证书renew_user() &#123; if [[ -e &quot;$&#123;EASY_RSA_DIR&#125;&#x2F;pki&#x2F;reqs&#x2F;$&#123;USER&#125;.req&quot; ]];then renew_cert check_cert_expired generate_ovpn else echo &quot;用户证书不存在！&quot; exit 1 fi&#125;main() &#123; # 切换到easy-rsa目录 cd $&#123;EASY_RSA_DIR&#125; # 根据传入的method运行对应函数 $&#123;METHOD&#125;&#125;# 获取参数while getopts &#39;m:u:i:r&#39; OPT;do case $OPT in u) USER&#x3D;&quot;$OPTARG&quot; echo &quot;USER&#x3D;$&#123;USER&#125;&quot; ;; i) IPADDRESS&#x3D;&quot;$OPTARG&quot; echo &quot;IPADDRESS&#x3D;$&#123;IPADDRESS&#125;&quot; ;; m) METHOD&#x3D;&quot;$OPTARG&quot; echo &quot;METHOD&#x3D;$&#123;METHOD&#125;&quot; ;; ?) echo &quot;Usage: $(base \\&quot;$0\\&quot;) -m [add_user|del_user|renew_user] -u USER -i IPADDRESS&quot; exit 0 ;; esacdonemain 添加用户1&#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh -m add_user -u USERNAME -i 10.8.0.10 删除用户1&#x2F;usr&#x2F;local&#x2F;bin&#x2F;ovpn_mgmt.sh -m del_user -u USERNAME","categories":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"}],"tags":[{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/tags/centos/"}]}],"categories":[{"name":"python","slug":"python","permalink":"https://mingzark.github.io/categories/python/"},{"name":"wordpress","slug":"wordpress","permalink":"https://mingzark.github.io/categories/wordpress/"},{"name":"springboot","slug":"springboot","permalink":"https://mingzark.github.io/categories/springboot/"},{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/categories/nginx/"},{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/categories/centos/"},{"name":"nginx","slug":"centos/nginx","permalink":"https://mingzark.github.io/categories/centos/nginx/"},{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/categories/k8s/"},{"name":"spring","slug":"k8s/spring","permalink":"https://mingzark.github.io/categories/k8s/spring/"},{"name":"pod","slug":"k8s/pod","permalink":"https://mingzark.github.io/categories/k8s/pod/"},{"name":"nacos","slug":"k8s/nacos","permalink":"https://mingzark.github.io/categories/k8s/nacos/"}],"tags":[{"name":"python","slug":"python","permalink":"https://mingzark.github.io/tags/python/"},{"name":"wordpress","slug":"wordpress","permalink":"https://mingzark.github.io/tags/wordpress/"},{"name":"springnoot","slug":"springnoot","permalink":"https://mingzark.github.io/tags/springnoot/"},{"name":"nginx","slug":"nginx","permalink":"https://mingzark.github.io/tags/nginx/"},{"name":"k8s","slug":"k8s","permalink":"https://mingzark.github.io/tags/k8s/"},{"name":"spring","slug":"spring","permalink":"https://mingzark.github.io/tags/spring/"},{"name":"pod","slug":"pod","permalink":"https://mingzark.github.io/tags/pod/"},{"name":"es","slug":"es","permalink":"https://mingzark.github.io/tags/es/"},{"name":"nacos","slug":"nacos","permalink":"https://mingzark.github.io/tags/nacos/"},{"name":"centos","slug":"centos","permalink":"https://mingzark.github.io/tags/centos/"}]}